#
# Dog tree
#

# Alias definitions
import bark:"tests.btree.dog.BarkTask"
import care:"tests.btree.dog.CareTask"
import play:"tests.btree.dog.PlayTask"
import mark:"tests.btree.dog.MarkTask"
import walk:"tests.btree.dog.WalkTask"
import rest:"tests.btree.dog.RestTask"

# Tree definition (note that root is optional)
root
  selector
    parallel
      care urgentProb:0.8
      com.badlogic.gdx.ai.tests.btree.dog.PlayTask # fully qualified task
    randomSelector
      untilSuccess  # find some trees to pee
        sequence
          bark times:"uniform,1,2"
          walk
          mark
      parallel policy:"selector"  # sleep with random timeout
        wait seconds:"triangular,2.5,5.5"
        rest